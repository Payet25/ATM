using System;

public class cardHolder
{
    String cardNum;
    int pin;
    String firstName;
    String lastName;
    double balance;

    public cardHolder(string cardNum, int pin, string firstName, string lastName, double balance)
    {
        this.cardNum = cardNum;
        this.pin = pin;
        this.firstName = firstName;
        this.lastName = lastName;
        this.balance = balance;
    }

    public String getNum()
    {
        return cardNum;
    }

    public int getPin()
    {
        return pin;
    }

    public String getFirstName()
    {
        return firstName;
    }

    public String getLastName()
    {
        return lastName;
    }

    public double getBalance()
    {
        return balance;
    }

    public void setNum(String newCardNum)
    {
        cardNum = newCardNum;
    }

    public void setPin(int newPin)
    {
        pin = newPin;
    }

    public void setFirstName(String newFirstName)
    {
        firstName = newFirstName;
    }

    public void setLastName(String newLastName)
    {
        lastName = newLastName;
    }

    public void setBalance(double newBalance)
    {
        balance = newBalance;
    }

    public static void Main(String[] args)
    {

        void printOptions()
        {
            Console.WriteLine("Please choose one option...");
            Console.WriteLine("(1) Deposit");
            Console.WriteLine("(2) Withdraw");
            Console.WriteLine("(3) Balance");
            Console.WriteLine("(4) Exit");
        }

        void deposit(cardHolder currentUser)
        {
            Console.WriteLine("How much would you like to deposit? ");
            double deposit = Double.Parse(Console.ReadLine());
            currentUser.setBalance(currentUser.getBalance + deposit);
            Console.WriteLine("Money Deposited. New balance is: " + currentUser.getBalance());
        }
    }

    void withdraw(cardHolder currentUser)
    {
        Console.WriteLine("How much would you like to withdraw: ");
        double withdrawal = Double.Parse(Console.ReadLine());
        //Check if user has enough money to withdraw
        if (currentUser.getBalance() < withdrawal)
        {
            Console.WriteLine("Insufficient balance: (");
        }
        else
        {
            currentUser.setBalance(currentUser.getBalance() - withdrawal);
            Console.WriteLine("You're Good to go!");
        }
    }

    void Balance(cardHolder currentUser)
    {
        Console.WriteLine("Current balance: " + currentUser.getBalance());
    }

    List<cardHolder> cardHolders = new List<cardHolder>();
    cardHolders.Add(new cardHolder("93756284674563108", 3942, "Simeon", "Harry", 485.90));
    cardHolders.Add(new cardHolder("92747365927481203", 8374, "Barry", "Jones", 8392.55));
    cardHolders.Add(new cardHolder("83027483928147219", 2482, "Saraj", "Singh", 924.42));
    cardHolders.Add(new cardHolder("84472918489392489", 1111, "Sarah", "Fraser", 4859.90));
    cardHolders.Add(new cardHolder("84472918489392492", 8492, "Jj", "Jr", 45.90));

    //Prompt User
    Console.WriteLine("Welcome");
    Console.WriteLine("Please insert your debit card: ");
    String debitCardNum = "";
    cardHolder currentUser;

    while(true)
        {
            try
            {
                debitCardNum = Console.ReadLine();
            // Check against DB
            currentUser = cardHolders.FirstOrDefault(a => a.cardNum == debitCardNum);
            if (currentUser != null) { break; }
            else { Console.WriteLine("Card not recognized. Please try again"); }
        }
        catch { Console.WriteLine("Card not recognized, Please try again"); }
        }
        Console.WriteLine("Please enter pin: ");
        int userPin = 0;
        while (true) 
        {
          try
           {
            userPin = int.Parse(Console.ReadLine());
            if (currentUser.getPin() == userPin) { break;  }
            else { Console.WriteLine("Incorrent pin, Please try again"); }
           }
            catch { Console.WriteLine("Incorrect Pin, Please try again"); }
    }

        Console.WriteLine("Welcome " + currentUser.getFirstName() + " :)");
        int option = 0;
        do
        {
            printOptions();
            try
            {
                option = int.Parse(Console.ReadLine());
            }
            catch { }
            if( option == 1 ) { deposit(currentUser); }
            else if (option == 2) { withdraw(currentUser); }
            else if (option == 3) { balance(currentUser); }
            else if (option == 4) { break; }
            else { option == 0; }
        }

        while (option != 4);
        Console.WriteLine("Thank You!");

    }

}